---
title: "analysis_quarto"
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

```

Voir toutes les info sur : https://www.productive-r-workflow.com/r/ Mes id pour m'y connecter : mon mail perso genty.lea hotmail.fr

Le dataset vient de [ce site](https://allisonhorst.github.io/palmerpenguins/)

# Projet depuis lequel ouvrir le doc

```{r,warning=FALSE, message=FALSE}
library(tidyverse)
library(readxl)
data <- read.csv("../input/data.csv")
summary(data)
```

Si on utilise un script quarto ou Rmd il faut ajouter "../" devant le chemin sinon ça ne le lit pas Je n'ai plus besoin d'utiliser setwd car je suis dans un projet, je ne lui indique que le chemin dans le projet

# Code pas tidy puis tidy

```{r}
round(mean(subset(na.omit(data), species == "Adelie")$bill_length_mm),2)

data2 <- data %>%
  filter(!is.na(bill_length_mm), species == "Adelie") %>%
  summarise(mean_bill_length = mean(bill_length_mm)) %>%
  pull(mean_bill_length) %>%
  round(2)
```

```{r}
penguins_clean <- na.omit(   data  )
plot(penguins_clean$bill_length_mm, penguins_clean$bill_depth_mm, type='n', xlab='Bill Length (mm)', ylab='Bill Depth (mm)', main='Penguin Bill Dimensions')
points(
  penguins_clean$bill_length_mm[penguins_clean$species  ==  "Adelie"], penguins_clean$bill_depth_mm[penguins_clean$species == "Adelie"], col='red', pch=16)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Chinstrap"], penguins_clean$bill_depth_mm[penguins_clean$species == "Chinstrap"], col='green', pch=17)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Gentoo"],
       penguins_clean$bill_depth_mm[penguins_clean$species == "Gentoo"], col='blue', pch=18)
legend("topright", legend=unique(penguins_clean$species),
       col=c('red'
        , 'green',
       'blue'), pch=c(16, 17, 18))
```

# Lire un fichier excel

```{r}
data2 <- read_excel("../input/data.xlsx",na="NA") 
```

read_excel est l'équivalent de read_csv pour les fichiers excel, évite l'étape de transformer un fichier excel en fichier csv

# Create functions

```{r}
print(
  round(mean(subset(
    na.omit(data), species == "Adelie" & island == "Torgersen"
  )$bill_length_mm), 2)
)
print(
  round(mean(subset(
    na.omit(data), species == "Adelie" & island == "Biscoe"
  )$bill_length_mm), 2)
)
print(
  round(mean(subset(
    na.omit(data), species == "Adelie" & island == "Dream"
  )$bill_length_mm), 2)
)
```

Ici c'est dupliqué 3 fois, le mieux est d'utiliser une fonction

Une fonction permet d'appliquer la même chose à divers arguments, par exemple:

```{r}
multiply_by_two <- function(a) {
  return(a*2)
}

multiply_by_two(5)
```

Fonction pour calculer le mean bill des oiseaux pour chaque île :

```{r}
calc_mean_bill <- function(island_name) {
  filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
  mean_bill_length <- mean(filtered_data$bill_length_mm)
  return(round(mean_bill_length, 2))
}

# Call the function for each island
calc_mean_bill("Torgersen")
calc_mean_bill("Biscoe")
calc_mean_bill("Dream")


multiply_by <- function(a){
  return(a*234)
}
multiply_by(311)
```

\*Exemple pour les modèles mixtes :

funct_glmm \<- function(var_a_expl){ full.model \<- lmer(var_a_expl \~ pedoclim1 + pedoclim2 + mowing + N_dose + irrig + R_tot + T_min+ (1\| field), data=pheno_funct_cwv_poll, REML=F,na.action="na.fail") }

funct_glmm(var_a_expl)\*

je peux automatiser la phase de modèle en mettant comme argument de la fonction la variable à expliquer je peux également mettre le dredge dans le modèle par contre la partie d'après avec les variables sélectionnées par le modèle est plus complexe et sera plutôt à répliquer manuellement voir chatGPT pour automatiser la création de la fonction

# Quarto

I **love** the `boxplot()` function of R, *so much*!

[Visit Google](https://www.google.com)

![Ce chat est très gentil](https://www.everland-petfood.com/wp-content/uploads/AdobeStock_203576107.jpeg)

-   Item 1
-   Item 2
-   Sub-item 1

1.  First item
2.  Second item

![Ce géranium est très gentil](photo.JPEG)

## Figure

```{r,fig.width = 8, fig.height = 6,fig.align='left'}
ggplot(penguins_clean, aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
  geom_point(size = 2.5) +
  labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions") +
  scale_color_manual(values = c("Adelie" = "#8B668B", "Chinstrap" = "#FF8C69", "Gentoo" = "#40E0D0")) +
  scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18)) +
  theme_minimal() +
  theme(legend.position = c(0.9, 0.85), 
        legend.background = element_rect(fill = "white", color = "black"))
```

```{r}
library(patchwork)
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p1 + p2
```
